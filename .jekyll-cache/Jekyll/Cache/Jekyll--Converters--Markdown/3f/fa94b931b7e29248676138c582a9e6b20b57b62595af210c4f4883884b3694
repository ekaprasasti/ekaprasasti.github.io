I"-<p>Kita memasuki bagian akhir dari rangkaian <a href="/angular-tour-of-heroes-tutorial">tutorial Angular aplikasi Tour of Heroes</a> yaitu HTTP.</p>

<p>Pada halaman ini, kita akan membuat beberapa pengembangan yaitu</p>

<ul>
  <li>
    <p>Mengambil data hero dari server.</p>
  </li>
  <li>
    <p>Memberi akses user untuk menambahkan, mengedit, dan menghapus nama hero.</p>
  </li>
  <li>
    <p>Simpan perubahan pada server.</p>
  </li>
</ul>

<p>Kita akan mengajarkan aplikasi untuk membuat panggilan HTTP yang sesuai ke remote server web API.</p>

<p>Ketika tutorial ini selesai aplikasi akan terlihat seperti ini <a href="https://angular.io/generated/live-examples/toh-pt6/eplnkr.html">live example</a> / <a href="https://angular.io/generated/zips/toh-pt6/toh-pt6.zip">download example</a>.</p>

<h2 id="http-service">HTTP Service</h2>

<p><a href="https://angular.io/api/http/HttpModule"><code class="highlighter-rouge">HttpModule</code></a> bukan merupakan core module dari Angular. <a href="https://angular.io/api/http/HttpModule"><code class="highlighter-rouge">HttpModule</code></a> merupkan pilihan web access untuk Angular. Ini ada sebagai modul add-on terpisah yang disebut <code class="highlighter-rouge">@angular/http</code> dan dikirim dalam file script terpisah sebagai bagian dari package npm Angular.</p>

<p>Kita sudah siap untuk import <code class="highlighter-rouge">@angular/http</code> karena <code class="highlighter-rouge">systemjs.config</code> mengkonfigurasikan <em>SystemJS</em> untuk meload library ketika kita membutuhkan.</p>

<h2 id="register-http-service">Register HTTP Service</h2>

<p>Aplikasi ini akan bergantung pada Angular http service, yang bergantung pada services pendukung lainnya. <code class="highlighter-rouge">HttpModule</code> dari library <code class="highlighter-rouge">@angular/http</code> memuat provider untuk satu set lengkap HTTP service.</p>

<p>Untuk memuat akses service ini dari semua aplikasi, tambahkan <code class="highlighter-rouge">HttpModule</code> ke daftar import <code class="highlighter-rouge">AppModule</code>.</p>

<h4 id="srcappappmodulets-v1">src/app/app.module.ts (v1)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">NgModule</span> <span class="p">}</span>      <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">BrowserModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/platform-browser</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">FormsModule</span> <span class="p">}</span>   <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/forms</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HttpModule</span> <span class="p">}</span>    <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">AppRoutingModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./app-routing.module</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">AppComponent</span> <span class="p">}</span>         <span class="k">from</span> <span class="dl">'</span><span class="s1">./app.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">DashboardComponent</span> <span class="p">}</span>   <span class="k">from</span> <span class="dl">'</span><span class="s1">./dashboard.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroesComponent</span> <span class="p">}</span>      <span class="k">from</span> <span class="dl">'</span><span class="s1">./heroes.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroDetailComponent</span> <span class="p">}</span>  <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero-detail.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroService</span> <span class="p">}</span>          <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero.service</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">NgModule</span><span class="p">({</span>
  <span class="na">imports</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">BrowserModule</span><span class="p">,</span>
    <span class="nx">FormsModule</span><span class="p">,</span>
    <span class="nx">HttpModule</span><span class="p">,</span>
    <span class="nx">AppRoutingModule</span>
  <span class="p">],</span>
  <span class="na">declarations</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">AppComponent</span><span class="p">,</span>
    <span class="nx">DashboardComponent</span><span class="p">,</span>
    <span class="nx">HeroDetailComponent</span><span class="p">,</span>
    <span class="nx">HeroesComponent</span><span class="p">,</span>
  <span class="p">],</span>
  <span class="na">providers</span><span class="p">:</span> <span class="p">[</span> <span class="nx">HeroService</span> <span class="p">],</span>
  <span class="na">bootstrap</span><span class="p">:</span> <span class="p">[</span> <span class="nx">AppComponent</span> <span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppModule</span> <span class="p">{</span> <span class="p">}</span>
</code></pre></div></div>

<p>Perhatikan bahwa kita juga menambahkan <code class="highlighter-rouge">HttpModule</code> sebagai bagian dari <em>imports</em> array di dalam NgModule <code class="highlighter-rouge">AppModule</code>.</p>

<h2 id="mensimulasikan-web-api">Mensimulasikan web API</h2>

<p>Kami merekomendasikan meregister service aplikasi di dalam root <em>providers</em> <code class="highlighter-rouge">AppModule</code>.</p>

<p>Sampai kita mempunyai web server yang dapat menangani permintaan data hero, HTTP client akan mengambil dan menyimpan data dari <em>mock service</em> (service tiruan) API web dalam memori.</p>

<p>Update <code class="highlighter-rouge">src/app/app.module.ts</code> dengan versi berikut, yang menggunakan <em>mock service</em>.</p>

<h4 id="srcappappmodulets-v2">src/app/app.module.ts (v2)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">NgModule</span> <span class="p">}</span>      <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">BrowserModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/platform-browser</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">FormsModule</span> <span class="p">}</span>   <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/forms</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HttpModule</span> <span class="p">}</span>    <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">AppRoutingModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./app-routing.module</span><span class="dl">'</span><span class="p">;</span>
 
<span class="c1">// Imports for loading &amp; configuring the in-memory web api</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">InMemoryWebApiModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">angular-in-memory-web-api</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">InMemoryDataService</span> <span class="p">}</span>  <span class="k">from</span> <span class="dl">'</span><span class="s1">./in-memory-data.service</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">AppComponent</span> <span class="p">}</span>         <span class="k">from</span> <span class="dl">'</span><span class="s1">./app.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">DashboardComponent</span> <span class="p">}</span>   <span class="k">from</span> <span class="dl">'</span><span class="s1">./dashboard.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroesComponent</span> <span class="p">}</span>      <span class="k">from</span> <span class="dl">'</span><span class="s1">./heroes.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroDetailComponent</span> <span class="p">}</span>  <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero-detail.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroService</span> <span class="p">}</span>          <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero.service</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">NgModule</span><span class="p">({</span>
  <span class="na">imports</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">BrowserModule</span><span class="p">,</span>
    <span class="nx">FormsModule</span><span class="p">,</span>
    <span class="nx">HttpModule</span><span class="p">,</span>
    <span class="nx">InMemoryWebApiModule</span><span class="p">.</span><span class="nx">forRoot</span><span class="p">(</span><span class="nx">InMemoryDataService</span><span class="p">),</span>
    <span class="nx">AppRoutingModule</span>
  <span class="p">],</span>
  <span class="na">declarations</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">AppComponent</span><span class="p">,</span>
    <span class="nx">DashboardComponent</span><span class="p">,</span>
    <span class="nx">HeroDetailComponent</span><span class="p">,</span>
    <span class="nx">HeroesComponent</span><span class="p">,</span>
  <span class="p">],</span>
  <span class="na">providers</span><span class="p">:</span> <span class="p">[</span> <span class="nx">HeroService</span> <span class="p">],</span>
  <span class="na">bootstrap</span><span class="p">:</span> <span class="p">[</span> <span class="nx">AppComponent</span> <span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppModule</span> <span class="p">{</span> <span class="p">}</span>
</code></pre></div></div>

<p>Alih-alih membutuhkan server API yang sebenarnya, contoh ini mensimulasikan komunikasi dengan remote server dengan menambahkan <a href="https://github.com/angular/in-memory-web-api">InMemoryWebApiModule</a> ke modul <code class="highlighter-rouge">imports</code>, menggantikan layanan backend XHR <code class="highlighter-rouge">Http</code> client dengan alternatif in-memory secara efektif.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">InMemoryWebApiModule</span><span class="p">.</span><span class="nx">forRoot</span><span class="p">(</span><span class="nx">InMemoryDataService</span><span class="p">),</span>
</code></pre></div></div>

<p>Konfigurasi method <code class="highlighter-rouge">forRoot()</code> mengambil class <code class="highlighter-rouge">InMemoryDataService</code> dalam memori database. Tambahkan file <code class="highlighter-rouge">in-memory-data.service.ts</code> pada folder <code class="highlighter-rouge">app</code> dengan konten berikut.</p>

<h4 id="srcappin-memory-dataservicets">src/app/in-memory-data.service.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">InMemoryDbService</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">angular-in-memory-web-api</span><span class="dl">'</span><span class="p">;</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">InMemoryDataService</span> <span class="kr">implements</span> <span class="nx">InMemoryDbService</span> <span class="p">{</span>
  <span class="nx">createDb</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">heroes</span> <span class="o">=</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Zero</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mr. Nice</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Narco</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">13</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bombasto</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Celeritas</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">15</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Magneta</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">RubberMan</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">17</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Dynama</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">18</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Dr IQ</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">19</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Magma</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Tornado</span><span class="dl">'</span> <span class="p">}</span>
    <span class="p">];</span>
    <span class="k">return</span> <span class="p">{</span><span class="nx">heroes</span><span class="p">};</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>File ini menggantikan <code class="highlighter-rouge">mock-heroes.ts</code>, yang sekarang aman untuk di delete. Menambahkan hero “Zero” untuk konfirmasi bahwa data service dapat menangani hero dengan <code class="highlighter-rouge">id==0</code>.</p>

<blockquote>
  <p>API web in-memory hanya berguna pada tahap awal pengembangan dan untuk demonstrasi seperti Tour of Heroes ini. Jangan khawatir dengan detail substitusi backend ini; Kita dapat melewatkannya saat Kita memiliki server API web yang nyata.</p>

  <p>Baca lebih lanjut mengenai in-memory API web dalam sesi <a href="https://angular.io/guide/http#in-mem-web-api">Appendix: Tour of Heroes in-memory web api</a> dari halaman <a href="https://angular.io/guide/http#in-mem-web-api">Http Client</a>.</p>
</blockquote>

<h2 id="heroes-dan-http">Heroes dan HTTP</h2>

<p>Dalam implementasi <code class="highlighter-rouge">HeroService</code> saat ini, sebuah Promise  di selesaikan dengan me-<em>return</em> mock heroes.</p>

<h4 id="srcappheroservicets-old-getheroes">src/app/hero.service.ts (old getHeroes)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">getHeroes</span><span class="p">():</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nb">Promise</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">HEROES</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Hal ini di implementasikan dalam mengantisipasi pengambilan data heroes dengan HTTP client, yang mana merupakan operasi asynchronous.</p>

<p>Sekarang convert <code class="highlighter-rouge">getHeroes()</code> untuk menggunakan HTTP.</p>

<h4 id="srcappheroservicets-updated-getheroes-and-new-class-members">src/app/hero.service.ts (updated getHeroes and new class members)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">private</span> <span class="nx">heroesUrl</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">api/heroes</span><span class="dl">'</span><span class="p">;</span>  <span class="c1">// URL to web api</span>
 
<span class="kd">constructor</span><span class="p">(</span><span class="kr">private</span> <span class="nx">http</span><span class="p">:</span> <span class="nx">Http</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
 
<span class="nx">getHeroes</span><span class="p">():</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">)</span>
             <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
             <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">[])</span>
             <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
<span class="p">}</span>
 
<span class="kr">private</span> <span class="nx">handleError</span><span class="p">(</span><span class="na">error</span><span class="p">:</span> <span class="nx">any</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">An error occurred</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span> <span class="c1">// for demo purposes only</span>
  <span class="k">return</span> <span class="nb">Promise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">message</span> <span class="o">||</span> <span class="nx">error</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Update statement import seperti berikut.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Injectable</span> <span class="p">}</span>    <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Headers</span><span class="p">,</span> <span class="nx">Http</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>

<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/toPromise</span><span class="dl">'</span><span class="p">;</span>

<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
</code></pre></div></div>

<p>Refresh browser. Data hero seharusnya sudah berhasil di load dari mock server.</p>

<h3 id="http-promise">HTTP Promise</h3>

<p>Angular <code class="highlighter-rouge">http.get</code> me-return RxJS <code class="highlighter-rouge">Observable</code>. <em>Observables</em> merupakan cara powerful untuk mengelola arus data asynchronous. Kita akan belajar Observables lebih lanjut nanti pada tutorial ini.</p>

<p>Untuk saat ini, kita meng-convert <code class="highlighter-rouge">Observable</code> ke <code class="highlighter-rouge">Promise</code> menggunakan operator <code class="highlighter-rouge">toPromise</code>.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
</code></pre></div></div>

<p>Ada banyak operator seperti <code class="highlighter-rouge">toPromise</code> yan merupakan <em>extend</em> dari <code class="highlighter-rouge">Observable</code> dengan kemampuan yang bermanfaat. Untuk menggunakan kemampuan tersebut, kita harus menambahkan sendiri operatornya. Hal itu semudah mengimpornya dari library RxJS seperti berikut.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/toPromise</span><span class="dl">'</span><span class="p">;</span>
</code></pre></div></div>

<p>Kita akan menambahkan lebih banyak operator, dan belajar mengapa kita harus melakukakannya, nanti pada tutorial ini.</p>

<h3 id="extract-data-di-dalam-callback-then">Extract data di dalam callback <em>then</em></h3>

<p>Di dalam promise callback <code class="highlighter-rouge">then()</code>, kita memanggil method <code class="highlighter-rouge">json</code> dari HTTP <code class="highlighter-rouge">response</code> untuk meng-ekstrak data dengan response nya.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">[])</span>
</code></pre></div></div>

<p>Respon JSON memiliki satu properti <code class="highlighter-rouge">data</code>, yang menyimpan array dari heroes yang di inginkan. Jadi kita mengambil array dan mengembalikannya sebagai nilai Promise yang terselesaikan.</p>

<blockquote>
  <p>Perhatikan berntuk data yang di kembalikan oleh server. Contoh API web in-memory ini  mengembalikan sebuah objek dengan property data. API anda mungkin akan mengembalikan yang lain. Sesuaikan kode yang cocok dengan API web anda.</p>
</blockquote>

<h3 id="error-handling">Error Handling</h3>

<p>Pada akhir dari <code class="highlighter-rouge">getHeroes()</code>, kita <code class="highlighter-rouge">catch</code> kegagalan server dan melewatkannya pada sebuah <em>error handler</em>.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
</code></pre></div></div>

<p>Ini adalah langkah yang penting. Kita harus mengantisipari kegagalan HTTP, karena sering terjadi karena alasan di luar kendali kita.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">private</span> <span class="nx">handleError</span><span class="p">(</span><span class="nx">error</span><span class="p">:</span> <span class="nx">any</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">An error occurred</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span> <span class="c1">// for demo purposes only</span>
  <span class="k">return</span> <span class="nb">Promise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">message</span> <span class="o">||</span> <span class="nx">error</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Demo service ini mengirimkan kesalahan ke konsol; Dalam kehidupan nyata, kita akan menangani kesalahan dalam kode. Untuk demo, ini berhasil.</p>

<p>Kode tersebut juga menyertakan kesalahan kepada promise yang di <em>reject</em>, sehingga dapat menampilkan pesan kesalahan yang benar kepada user.</p>

<h3 id="mengambil-hero-dengan-id">Mengambil hero dengan id</h3>

<p>Ketika <code class="highlighter-rouge">HeroDetailComponent</code> meminta <code class="highlighter-rouge">HeroService</code> untuk mengambil hero, <code class="highlighter-rouge">HeroService</code> saat ini mengambil semua hero dan memfilter yang memiliki id yang cocok. Itu bagus untuk simulasi, tapi akan sia-sia untuk meminta server nyata untuk semua heroes saat kita menginginkannya. Sebagian besai web API mendukung permintaan <em>get-by-id</em> dalam bentuk <code class="highlighter-rouge">api/hero/:id</code> (seperti <code class="highlighter-rouge">api/hero/11</code>).</p>

<p>Update method <code class="highlighter-rouge">HeroService.getHero()</code> untuk membuat request <em>get-by-id</em>.</p>

<h4 id="srcappheroservicets">src/app/hero.service.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">getHero</span><span class="p">(</span><span class="nx">id</span><span class="p">:</span> <span class="nx">number</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">;</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">)</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Request hampir sama dengan <code class="highlighter-rouge">getHeros()</code>. Id hero di dalam URL mengidentifikasikan hero yang mana pada server yang akan di update.</p>

<p>Selain itu, data di dalam response dianggap sebagai object tunggal hero dan bukan merupakan sebuah array.</p>

<h2 id="api-getheroes-yang-tidak-berubah">API <em>getHeroes</em> yang tidak berubah</h2>

<p>Meskipun kita membuat perubahan internal yang signifikan untuk <code class="highlighter-rouge">getHeroes()</code> dan <code class="highlighter-rouge">getHero()</code>, perubahan tidak akan berubah. Kita masih mengembalikan Promise dari kedua method tersebut. kita tidak perlu memperbarui salah satu component yang memanggil mereka.</p>

<p>Sekarang saatnya untuk menambahkan kemampuan untuk <em>create</em> dan <em>delete</em> hero.</p>

<h2 id="meng-update-detail-hero">Meng-update detail hero</h2>

<p>Cobalah untuk meng-edit nama hero di dalam detail hero view. Saat kita mengetik, nama hero ter-update pada heading view. Tetapi ketika kita klik tombol Back, perubahan akan hilang.</p>

<p>Update sebelumnya tidak hilang. Lalu apa yang berubah? Saat aplikasi menggunakan mock heroes, perubahan di terapkan langsung pada obejek hero dalam daftar tunggal, <em>app-wide</em>, <em>shared list</em>. Sekarang setelah kita mengambil data dari server, jika kita ingin perubahan lebih lanjut, kita harus menuliskannya kembali ke server.</p>

<h3 id="tambahkan-kemampuan-untuk-menyimpan-detail-hero">Tambahkan kemampuan untuk menyimpan detail hero</h3>

<p>Pada akhir dari detail template hero, tambahkan tombol save dengan <em>event binding</em> <code class="highlighter-rouge">click</code> yang memanggil method component baru bernama <code class="highlighter-rouge">save()</code>.</p>

<h4 id="srcapphero-detailcomponenthtml-save">src/app/hero-detail.component.html (save)</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;button</span> <span class="na">(click)=</span><span class="s">"save()"</span><span class="nt">&gt;</span>Save<span class="nt">&lt;/button&gt;</span>
</code></pre></div></div>

<p>Tambahkan method <code class="highlighter-rouge">save()</code> berikut, yang menyimpan perubahan nama hero menggunakan method service hero  <code class="highlighter-rouge">update()</code> dan menavigasi kembali ke halaman sebelumnya.</p>

<h4 id="srcapphero-detailcomponentts-save">src/app/hero-detail.component.ts (save)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">save</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hero</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">goBack</span><span class="p">());</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="menambahkan-method-servce-hero-update">Menambahkan method servce hero <em>update()</em></h3>

<p>Keseluruhan method <code class="highlighter-rouge">update()</code> mirip dengan <code class="highlighter-rouge">getHeroes()</code>, namun menggunakan HTTP <code class="highlighter-rouge">put()</code> untuk mempertahankan perubahan pada <em>server-side</em>.</p>

<h4 id="srcappheroservicets-update">src/app/hero.service.ts (update)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">private</span> <span class="nx">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">({</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span><span class="p">});</span>

<span class="nx">update</span><span class="p">(</span><span class="nx">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">hero</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">;</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span>
    <span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">hero</span><span class="p">),</span> <span class="p">{</span><span class="na">headers</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">})</span>
    <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="nx">hero</span><span class="p">)</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Untuk mengidentifikasi hero yang mana pada server yang harus di update, <code class="highlighter-rouge">id</code> hero di <em>encoded</em> di dalam URL. Body <code class="highlighter-rouge">put()</code> yang merupakan JSON string encoding dari hero, di peroleh dengan memanggil <code class="highlighter-rouge">JSON.stringify</code>. Tipe <em>body content</em> (<code class="highlighter-rouge">application/json</code>) di identifikasikan pada header request.</p>

<p>Refresh browser, ubah nama hero, simpan perubahan, dan klik button Back pada browser. Perubahan sekarang telah tersimpan.</p>

<h2 id="kemampuan-untuk-menambahkan-hero">Kemampuan untuk menambahkan hero</h2>

<p>Untuk menambahkan hero, aplikasi membutuhkan nama hero. Kita bisa menggunakan element <code class="highlighter-rouge">input</code> yang di hubungkan pada tombol add.</p>

<p>Masukan kode berikut ke dalam component HTML heroes, setelah heading.</p>

<h4 id="srcappheroescomponenthtml-add">src/app/heroes.component.html (add)</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div&gt;</span>
  <span class="nt">&lt;label&gt;</span>Hero name:<span class="nt">&lt;/label&gt;</span> <span class="nt">&lt;input</span> <span class="na">#heroName</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">(click)=</span><span class="s">"add(heroName.value); heroName.value=''"</span><span class="nt">&gt;</span>
    Add
  <span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>Pada respon event click, panggil component click handler lalu bersihkan input field sehingga siap untuk di masukan nama lain.</p>

<h4 id="srcappheroescomponentts-add">src/app/heroes.component.ts (add)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">add</span><span class="p">(</span><span class="nx">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
  <span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">.</span><span class="nx">trim</span><span class="p">();</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span><span class="p">;</span> <span class="p">}</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">hero</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">hero</span><span class="p">);</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Ketika nama yang di berikan tidak kosong, handler akan mendelegasikan pembuatan nama hero ke dalam service hero, dan kemudian menambahkan hero baru ke dalam array.</p>

<p>Implementasikan method <code class="highlighter-rouge">create()</code> di dalam class <code class="highlighter-rouge">HeroService</code>.</p>

<h4 id="srcappheroservicets-create">src/app/hero.service.ts (create)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">create</span><span class="p">(</span><span class="nx">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span>
    <span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">,</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span><span class="na">name</span><span class="p">:</span> <span class="nx">name</span><span class="p">}),</span> <span class="p">{</span><span class="na">headers</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">})</span>
    <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">)</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Refresh browser dan buat beberapa hero.</p>

<h2 id="kemampuan-menghapus-hero">Kemampuan menghapus hero</h2>

<p>Setiap hero dalam view heroes memiliki tombol delete.</p>

<p>Tambahkan element button pada heroes component HTML, setelah nama hero di tampilkan pada perulangan element <code class="highlighter-rouge">&lt;li&gt;</code>.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"delete"</span>
  <span class="na">(click)=</span><span class="s">"delete(hero); $event.stopPropagation()"</span><span class="nt">&gt;</span>x<span class="nt">&lt;/button&gt;</span>
</code></pre></div></div>

<p>Elemetn <code class="highlighter-rouge">&lt;li&gt;</code> sekarang menjadi seperti ini.</p>

<h4 id="srcappheroescomponenthtml-li-element">src/app/heroes.component.html (li-element)</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nt">&lt;li</span> <span class="na">*ngFor=</span><span class="s">"let hero of heroes"</span> <span class="na">(click)=</span><span class="s">"onSelect(hero)"</span>
    <span class="na">[class.selected]=</span><span class="s">"hero === selectedHero"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"badge"</span><span class="nt">&gt;</span>{{hero.id}}<span class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;span&gt;</span>{{hero.name}}<span class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"delete"</span>
    <span class="na">(click)=</span><span class="s">"delete(hero); $event.stopPropagation()"</span><span class="nt">&gt;</span>x<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/li&gt;</span>

</code></pre></div></div>

<p>Selain memanggil methdo component <code class="highlighter-rouge">delete()</code>, kode click handler tombol delete menghentikan penyebaran click event. Kita tidka ingin click handler <code class="highlighter-rouge">&lt;li&gt;</code> di triggered karena hal tersebut akan menghapus hero yang di pilih user.</p>

<p>Logika dari handler <code class="highlighter-rouge">delete()</code> agak rumit.</p>

<h4 id="srcappheroescomponentts-delete">src/app/heroes.component.ts (delete)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">delete</span><span class="p">(</span><span class="nx">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span>
      <span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">hero</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">h</span> <span class="o">=&gt;</span> <span class="nx">h</span> <span class="o">!==</span> <span class="nx">hero</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span> <span class="o">===</span> <span class="nx">hero</span><span class="p">)</span> <span class="p">{</span> <span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span> <span class="p">}</span>
      <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Tentu saja kita mendelegasikan penghapusan hero pada service hero, namun component tersebut masih bertanggung jawab untuk memperbaharui tampilan. Ini akan menghapus hero yang dihapus dari daftar dan mengatur ulang hero yang dipilih, jika perlu.</p>

<p>Untuk menempatkan tombol hapus di bagian paling kanan dari entri hero, tambahkan CSS berikut.</p>

<h4 id="srcappheroescomponentcss-additions">src/app/heroes.component.css (additions)</h4>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">button</span><span class="nc">.delete</span> <span class="p">{</span>
  <span class="nl">float</span><span class="p">:</span><span class="nb">right</span><span class="p">;</span>
  <span class="nl">margin-top</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>
  <span class="nl">margin-right</span><span class="p">:</span> <span class="m">.8em</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="no">gray</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span><span class="no">white</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="method-hero-service-delete">Method hero service <em>delete()</em></h3>

<p>Tambahkan method hero service <code class="highlighter-rouge">delete()</code>, yang menggunakan HTTP method <code class="highlighter-rouge">delete()</code> untuk menghapus hero dari server.</p>

<h4 id="srcappheroservicets-delete">src/app/hero.service.ts (delete)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">delete</span><span class="p">(</span><span class="nx">id</span><span class="p">:</span> <span class="nx">number</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="k">void</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">;</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span><span class="na">headers</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">})</span>
    <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="kc">null</span><span class="p">)</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Refresh browser dan coba fungsional baru delete.</p>

<h2 id="observables">Observables</h2>

<p>Setiap method service <code class="highlighter-rouge">Http</code> mengembalikan sebuah <code class="highlighter-rouge">Observable</code> dari objek HTTP <code class="highlighter-rouge">Response</code>.</p>

<p><code class="highlighter-rouge">HeroService</code> meng-convert <code class="highlighter-rouge">Observable</code> tersebut kedalam <code class="highlighter-rouge">Promise</code> dan mengembalikan promise kepada pemanggilnya. Sesi ini akan menunjukan kita bagaimana, kapan, dan mengapa me-<em>return</em> atau mengembalikan <code class="highlighter-rouge">Observable</code> secara direct.</p>

<h3 id="background">Background</h3>

<p>Sebuah Observable merupakan <em>stream</em> dari event yang bisa kita proses menggunakan array seperti operator.</p>

<p>Core Angular mempunya dukungan basic terhadapa observable. Developer menambahkan dukungan dengan operator dan ekstensi dari <a href="http://reactivex.io/rxjs">library RxJS</a>.</p>

<p>Ingatlah bahwa HeroService berhubungan dengan operator <code class="highlighter-rouge">toPromise</code> ke hasil Observable dari <code class="highlighter-rouge">http.get()</code>. Operator itu meng-<em>convert</em> Observable menjadi Promise dan kita melewati promise tersebut kepada pemanggilnya.</p>

<p>Mengkonversi Promise seringkali merupakan pilihan yang baik. Kita biasa meminta <code class="highlighter-rouge">http.get()</code> untuk mengambil suatu data. Bila kita sudah menerima data, kita berhasil.</p>

<p>Tapi request tidak selalu di lakukan satu kali. Kita dapat memulai dengan satu permintaan, membatalkannya, dan mengajukan request yang berbeda sebelum server merespon request yang pertama.</p>

<p>Urutan <em>request-cancel-new-request</em> sulit di terapkan dengan Promise, tapi mudah dengan menggunakan Observable.</p>

<h3 id="menambahkan-kemampuan-pencarian-nama">Menambahkan kemampuan pencarian nama</h3>

<p>Kita akan menambahkan fitur pencarian pada aplikasi Tour of Heroes. Dengan user mengtikan nama ke dalam <em>search box</em>, kita akan membuat perimntaan HTTP berulang untuk heroes memfilter dari nama tersebut.</p>

<p>Dimulai dengan membuat <code class="highlighter-rouge">HeroSearchService</code> yang mengirim <em>search queries</em> kepada server web API.</p>

<h4 id="srcapphero-searchservicets">src/app/hero-search.service.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Injectable</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Http</span> <span class="p">}</span>       <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Observable</span> <span class="p">}</span>     <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Observable</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/map</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span>           <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Injectable</span><span class="p">()</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">HeroSearchService</span> <span class="p">{</span>
 
  <span class="kd">constructor</span><span class="p">(</span><span class="kr">private</span> <span class="nx">http</span><span class="p">:</span> <span class="nx">Http</span><span class="p">)</span> <span class="p">{}</span>
 
  <span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="nx">Observable</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span>
               <span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="s2">`api/heroes/?name=</span><span class="p">${</span><span class="nx">term</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
               <span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">[]);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Panggilan <code class="highlighter-rouge">http.get()</code> di dalam <code class="highlighter-rouge">HeroSearchService</code>  serupa dengan yang ada di <code class="highlighter-rouge">HeroService</code>, meskipun URL saat ini mempunyai <em>query string</em>.</p>

<p>Lebih penting lagi, kita tidak lagi memanggil <code class="highlighter-rouge">toPromise()</code>. Sebagai gantinya kita mengembalikan Observable dari <code class="highlighter-rouge">http.get()</code>, setelah menghubungkannya ke operator RxJS lainnya, <code class="highlighter-rouge">map()</code>, untuk mengekstrak hero dari response data. Operator RxJS membuat pemrosesan respon mudah dan mudah di baca. Lihat pembahasan pada tutorial ini tentang operator.</p>

<h3 id="herosearchcomponent">HeroSearchComponent</h3>

<p>Buat sebuah <code class="highlighter-rouge">HeroSearchComponent</code> yang memanggil <code class="highlighter-rouge">HeroSearchService</code> yang baru kita buat.</p>

<p>Template component di buat sederhana, hanya text box dan list dari hasil pencarian yang sesuai.</p>

<h4 id="srcapphero-searchcomponenthtml">src/app/hero-search.component.html</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"search-component"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h4&gt;</span>Hero Search<span class="nt">&lt;/h4&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">#searchBox</span> <span class="na">id=</span><span class="s">"search-box"</span> <span class="na">(keyup)=</span><span class="s">"search(searchBox.value)"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">*ngFor=</span><span class="s">"let hero of heroes | async"</span>
         <span class="na">(click)=</span><span class="s">"gotoDetail(hero)"</span> <span class="na">class=</span><span class="s">"search-result"</span> <span class="nt">&gt;</span>
      {{hero.name}}
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>

</code></pre></div></div>

<p>Juga tambahkan sebuah style dari component yang baru kita buat.</p>

<h4 id="srcapphero-searchcomponentcss">src/app/hero-search.component.css</h4>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.search-result</span><span class="p">{</span>
  <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">gray</span><span class="p">;</span>
  <span class="nl">border-left</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">gray</span><span class="p">;</span>
  <span class="nl">border-right</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">gray</span><span class="p">;</span>
  <span class="nl">width</span><span class="p">:</span><span class="m">195px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">16px</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">5px</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
  <span class="nl">cursor</span><span class="p">:</span> <span class="nb">pointer</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="nc">.search-result</span><span class="nd">:hover</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#eee</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#607D8B</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="nf">#search-box</span><span class="p">{</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">200px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Dengan user mengetikan nama di dalam <em>search box</em>, buah keyup event binding memanggil method <code class="highlighter-rouge">search()</code> component dengan nilai <em>search box</em> yang baru.</p>

<p>Seperti yang di harapkan, <code class="highlighter-rouge">*ngFor</code> melakukan pengulangan object hero dari property component <code class="highlighter-rouge">heroes</code>.</p>

<p>Tapi yang kita lihat nanti, property <code class="highlighter-rouge">heroes</code> saat ini merupakan sebuat <em>Observable</em> dari array hero, bukan hanya array hero. <code class="highlighter-rouge">*ngFor</code> tidak bisa melakukan apa-apa dengan <code class="highlighter-rouge">Observable</code> sampai kita membuat route melalu pipi <code class="highlighter-rouge">aync</code> (<code class="highlighter-rouge">AsyncPipe</code>). Pipe <code class="highlighter-rouge">ascync</code> mengikuti <code class="highlighter-rouge">Observable</code> dan membuat array dari heroes ke <code class="highlighter-rouge">*ngFor</code>.</p>

<p>Buat <code class="highlighter-rouge">HeroSearchComponent</code> class dan metadata.</p>

<h4 id="srcapphero-searchcomponentts">src/app/hero-search.component.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Component</span><span class="p">,</span> <span class="nx">OnInit</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Router</span> <span class="p">}</span>            <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/router</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Observable</span> <span class="p">}</span>        <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Observable</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Subject</span> <span class="p">}</span>           <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Subject</span><span class="dl">'</span><span class="p">;</span>
 
<span class="c1">// Observable class extensions</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/observable/of</span><span class="dl">'</span><span class="p">;</span>
 
<span class="c1">// Observable operators</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/catch</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/debounceTime</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/distinctUntilChanged</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroSearchService</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero-search.service</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">hero-search</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">templateUrl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./hero-search.component.html</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">styleUrls</span><span class="p">:</span> <span class="p">[</span> <span class="dl">'</span><span class="s1">./hero-search.component.css</span><span class="dl">'</span> <span class="p">],</span>
  <span class="na">providers</span><span class="p">:</span> <span class="p">[</span><span class="nx">HeroSearchService</span><span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">HeroSearchComponent</span> <span class="kr">implements</span> <span class="nx">OnInit</span> <span class="p">{</span>
  <span class="nl">heroes</span><span class="p">:</span> <span class="nx">Observable</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">;</span>
  <span class="kr">private</span> <span class="nx">searchTerms</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Subject</span><span class="o">&lt;</span><span class="nx">string</span><span class="o">&gt;</span><span class="p">();</span>
 
  <span class="kd">constructor</span><span class="p">(</span>
    <span class="kr">private</span> <span class="nx">heroSearchService</span><span class="p">:</span> <span class="nx">HeroSearchService</span><span class="p">,</span>
    <span class="kr">private</span> <span class="nx">router</span><span class="p">:</span> <span class="nx">Router</span><span class="p">)</span> <span class="p">{}</span>
 
  <span class="c1">// Push a search term into the observable stream.</span>
  <span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">searchTerms</span><span class="p">.</span><span class="nx">next</span><span class="p">(</span><span class="nx">term</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="nx">ngOnInit</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">searchTerms</span>
      <span class="p">.</span><span class="nx">debounceTime</span><span class="p">(</span><span class="mi">300</span><span class="p">)</span>        <span class="c1">// wait 300ms after each keystroke before considering the term</span>
      <span class="p">.</span><span class="nx">distinctUntilChanged</span><span class="p">()</span>   <span class="c1">// ignore if next search term is same as previous</span>
      <span class="p">.</span><span class="nx">switchMap</span><span class="p">(</span><span class="nx">term</span> <span class="o">=&gt;</span> <span class="nx">term</span>   <span class="c1">// switch to new observable each time the term changes</span>
        <span class="c1">// return the http search observable</span>
        <span class="p">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">heroSearchService</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">)</span>
        <span class="c1">// or the observable of empty heroes if there was no search term</span>
        <span class="p">:</span> <span class="nx">Observable</span><span class="p">.</span><span class="k">of</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">([]))</span>
      <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="c1">// TODO: add real error handling</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
        <span class="k">return</span> <span class="nx">Observable</span><span class="p">.</span><span class="k">of</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">([]);</span>
      <span class="p">});</span>
  <span class="p">}</span>
 
  <span class="nx">gotoDetail</span><span class="p">(</span><span class="na">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">link</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">/detail</span><span class="dl">'</span><span class="p">,</span> <span class="nx">hero</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="nx">link</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="search-terms">Search Terms</h4>

<p>Fokus pada <code class="highlighter-rouge">searchTerms</code>:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">private</span> <span class="nx">searchTerms</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Subject</span><span class="o">&lt;</span><span class="nx">string</span><span class="o">&gt;</span><span class="p">();</span>

<span class="c1">// Push a search term into the observable stream.</span>
<span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">searchTerms</span><span class="p">.</span><span class="nx">next</span><span class="p">(</span><span class="nx">term</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">Subject</code> merupakan <em>producer</em> dari observable event stream. <code class="highlighter-rouge">searchTerms</code> memproduksi string <code class="highlighter-rouge">Observable</code>, kriteria filter dari pencarian nama.</p>

<h4 id="inisiasi-property-heroes-ngoninit">Inisiasi property <em>heroes</em> (<em>ngOnInit</em>)</h4>

<p><code class="highlighter-rouge">Subject</code> juga merupakan <code class="highlighter-rouge">Observable</code>. Kita dapat merubah stream dari array <code class="highlighter-rouge">Hero</code> dan memberikan harisnya ke property <code class="highlighter-rouge">heroes</code>.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">heroes</span><span class="p">:</span> <span class="nx">Observable</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">;</span>
 
<span class="nx">ngOnInit</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">searchTerms</span>
    <span class="p">.</span><span class="nx">debounceTime</span><span class="p">(</span><span class="mi">300</span><span class="p">)</span>        <span class="c1">// wait 300ms after each keystroke before considering the term</span>
    <span class="p">.</span><span class="nx">distinctUntilChanged</span><span class="p">()</span>   <span class="c1">// ignore if next search term is same as previous</span>
    <span class="p">.</span><span class="nx">switchMap</span><span class="p">(</span><span class="nx">term</span> <span class="o">=&gt;</span> <span class="nx">term</span>   <span class="c1">// switch to new observable each time the term changes</span>
      <span class="c1">// return the http search observable</span>
      <span class="p">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">heroSearchService</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">)</span>
      <span class="c1">// or the observable of empty heroes if there was no search term</span>
      <span class="p">:</span> <span class="nx">Observable</span><span class="p">.</span><span class="k">of</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">([]))</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="c1">// TODO: add real error handling</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
      <span class="k">return</span> <span class="nx">Observable</span><span class="p">.</span><span class="k">of</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">([]);</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Melewatkan setiap <em>keystroke</em> user secara langsung ke <code class="highlighter-rouge">HeroSearchService</code> akan membuat HTTP request yang berlebihan, menghemat sumber daya server dan membakar paket data jaringan seluler.</p>

<p>Sebagai gantinya, kita bisa mengelompokan operatro Observable yang mengurangi arus request ke string Observable. Kita akan melakukan lebih sedikit panggilan ke <code class="highlighter-rouge">HeroSearchService</code> dan masih mendapatkan hasil yang cepat. Berikut caranya.</p>

<ul>
  <li>
    <p><code class="highlighter-rouge">debounceTime(300)</code> tunggu sampai arus event string baru berhenti selama 300 milidetik sebelum melewati sepanjang string terbaru. Kita tidka pernah membuat permintaan lebih sering daripada 300ms.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">distinctUntilChanged</code> memastikan bahwa permintaan hanya dikirim jika teks filter berubah.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">switchMap()</code> memanggil service pencarian untuk setiap search term yang membuatnya melalui <code class="highlighter-rouge">debounce</code> dan <code class="highlighter-rouge">distinctUntilChanged</code>. Ini membatalkan dan membuang search observable sebelumnya, mengembalikan hanya observable search service yang baru.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">catch</code> meng-intercept observable yang gagal. Contoh sederhana mencetak kesalahan ke konsol, aplikasi akan teteap hidup. Kemudian untuk menghapus hasi pencarian, kita mengembalikan obeservable yang berisi array kosong.</p>
  </li>
</ul>

<h3 id="import-operator-rxjs">Import operator RxJS</h3>

<p>Sebagian besar operator RxJS tidak termasuk dalam Angular dari dasar implementasi Observable. Implementasi pada dasarnya hanya mencakup apa yang di butuhkan Angular itu sendiri.</p>

<p>Ketika kita membutuhkan lebih banyak fitur RxJS, tambahkan <code class="highlighter-rouge">Observable</code> dengan meng-<em>import</em> library di mana mereka di definisikan. Berikut adalah semua import RxJS yang di butuhkan oleh component.</p>

<h4 id="srcapphero-searchcomponentts-rxjs-imports">src/app/hero-search.component.ts (rxjs imports)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Observable</span> <span class="p">}</span>        <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Observable</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Subject</span> <span class="p">}</span>           <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Subject</span><span class="dl">'</span><span class="p">;</span>

<span class="c1">// Observable class extensions</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/observable/of</span><span class="dl">'</span><span class="p">;</span>

<span class="c1">// Observable operators</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/catch</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/debounceTime</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/distinctUntilChanged</span><span class="dl">'</span><span class="p">;</span>
</code></pre></div></div>

<p>Syntax <code class="highlighter-rouge">import 'rxjs/add/...'</code> mungkin kurang familiar. Karena tidak ada daftar simbol di antara kurung kurawal <code class="highlighter-rouge">{...}</code>.</p>

<p>Kita tidak memerlukan simbol operator itu sendiri. Dalam setiap kasus, tindakan meng-<em>import</em> library akan me-<em>loads</em> dan <em>executes</em> script library yang di pilih, pada gilirannya, menambahkan operator ke class <code class="highlighter-rouge">Observable</code>.</p>

<h3 id="menambahkan-component-search-ke-dashboard">Menambahkan component search ke dashboard</h3>

<p>Tambahkan element HTML search hero di bawah dari template <code class="highlighter-rouge">DashboardComponent</code>.</p>

<h4 id="srcappdashboardcomponenthtml">src/app/dashboard.component.html</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nt">&lt;h3&gt;</span>Top Heroes<span class="nt">&lt;/h3&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid grid-pad"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">*ngFor=</span><span class="s">"let hero of heroes"</span>  <span class="na">[routerLink]=</span><span class="s">"['/detail', hero.id]"</span>  <span class="na">class=</span><span class="s">"col-1-4"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"module hero"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;h4&gt;</span>{{hero.name}}<span class="nt">&lt;/h4&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;hero-search&gt;&lt;/hero-search&gt;</span>

</code></pre></div></div>

<p>Akhirnya, import <code class="highlighter-rouge">HeroSearchComponent</code> dari <code class="highlighter-rouge">hero-search.component.ts</code> dan tambahkan kepada array <code class="highlighter-rouge">declarations</code>.</p>

<h4 id="srcappappmodulets-search">src/app/app.module.ts (search)</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">declarations</span><span class="p">:</span> <span class="p">[</span>
  <span class="nx">AppComponent</span><span class="p">,</span>
  <span class="nx">DashboardComponent</span><span class="p">,</span>
  <span class="nx">HeroDetailComponent</span><span class="p">,</span>
  <span class="nx">HeroesComponent</span><span class="p">,</span>
  <span class="nx">HeroSearchComponent</span>
<span class="p">],</span>
</code></pre></div></div>

<p>Jalankan aplikasi kembali. Di dalam Dashboard, masukan beberapa text pada <em>search box</em>. Jika kita memasukan karakter yang sesuai dengan nama hero yang ada, kita akan melihat sesuatu seperti ini.</p>

<p><img src="https://angular.io/generated/images/guide/toh/toh-hero-search.png" alt="Hero search box" /></p>

<h2 id="struktur-aplikasi-dan-kode">Struktur aplikasi dan kode</h2>

<p>Review contoh source code pada <a href="https://angular.io/generated/live-examples/toh-pt6/eplnkr.html">live example</a> / <a href="https://angular.io/generated/zips/toh-pt6/toh-pt6.zip">download example</a> pada tutorial ini. Pastikan kita memiliki struktur aplikasi seperti berikut.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>angular-tour-of-heroes
|
 -src
| |
| -app
| | |
| | -app.component.css
| | |
| | -app.compponent.ts
| | |
| | -app.module.ts
| | |
| | -app-routing.module.ts
| | |
| | -dashboard.component.css
| | |
| | -dashboard.component.html
| | |
| | -dashboard.component.ts
| | |
| | -hero.service.ts
| | |
| | -hero.ts
| | |
| | -hero-detail.component.css
| | |
| | -hero-detail.component.html
| | |
| | -hero-detail.component.ts
| | |
| | -hero-search.component.html (new)
| | |
| | -hero-search.component.css (new)
| | |
| | -hero-search.component.ts (new)
| | |
| | -hero-search.service.ts (new)
| | |
| | -heroes.component.css
| | |
| | -heroes.component.html
| | |
| | -heroes.component.ts
| | |
| | -in-memory-data.service.ts (new)
| |
| -main.ts
| |
| -index.html
| |
| -styles.css
| |
| -systemjs.config.js
| |
| -tsconfig.json
|
-node_modules
|
-package.json
</code></pre></div></div>

<h2 id="apa-saja-yang-sudah-kita-pelajari">Apa saja yang sudah kita pelajari?</h2>

<p>Kita berada di akhir perjalanan, dan kita telah menyelesaikan banyak hal.</p>

<ul>
  <li>
    <p>Menambahkan dependencies yang di butuhkan untuk menggunakan HTTP di dalam aplikasi.</p>
  </li>
  <li>
    <p>Merefactor <code class="highlighter-rouge">HeroService</code> untuk meload hero dari web API.</p>
  </li>
  <li>
    <p>Menambahkan <code class="highlighter-rouge">HeroService</code> untuk mendukung <code class="highlighter-rouge">post()</code>, <code class="highlighter-rouge">put()</code>, dan method <code class="highlighter-rouge">delete()</code>.</p>
  </li>
  <li>
    <p>Meng-update component untuk menambahkan fitur adding, editing, dan deleting hero.</p>
  </li>
  <li>
    <p>Mengkonfigurasi sebuah in-memory web API.</p>
  </li>
  <li>
    <p>Belajar bagaimana menggunakan Observable.</p>
  </li>
</ul>

<p>Berikut adalah file yang kita tambahkankan atau di ubah pada tutorial ini.</p>

<h4 id="appcomponentts">app.component.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Component</span> <span class="p">}</span>          <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">my-app</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">template</span><span class="p">:</span> <span class="s2">`
    &lt;h1&gt;{{title}}&lt;/h1&gt;
    &lt;nav&gt;
      &lt;a routerLink="/dashboard" routerLinkActive="active"&gt;Dashboard&lt;/a&gt;
      &lt;a routerLink="/heroes" routerLinkActive="active"&gt;Heroes&lt;/a&gt;
    &lt;/nav&gt;
    &lt;router-outlet&gt;&lt;/router-outlet&gt;
  `</span><span class="p">,</span>
  <span class="na">styleUrls</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">./app.component.css</span><span class="dl">'</span><span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppComponent</span> <span class="p">{</span>
  <span class="nx">title</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Tour of Heroes</span><span class="dl">'</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>

<h4 id="appmodulets">app.module.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">NgModule</span> <span class="p">}</span>      <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">BrowserModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/platform-browser</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">FormsModule</span> <span class="p">}</span>   <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/forms</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HttpModule</span> <span class="p">}</span>    <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">AppRoutingModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./app-routing.module</span><span class="dl">'</span><span class="p">;</span>
 
<span class="c1">// Imports for loading &amp; configuring the in-memory web api</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">InMemoryWebApiModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">angular-in-memory-web-api</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">InMemoryDataService</span> <span class="p">}</span>  <span class="k">from</span> <span class="dl">'</span><span class="s1">./in-memory-data.service</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">AppComponent</span> <span class="p">}</span>         <span class="k">from</span> <span class="dl">'</span><span class="s1">./app.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">DashboardComponent</span> <span class="p">}</span>   <span class="k">from</span> <span class="dl">'</span><span class="s1">./dashboard.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroesComponent</span> <span class="p">}</span>      <span class="k">from</span> <span class="dl">'</span><span class="s1">./heroes.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroDetailComponent</span> <span class="p">}</span>  <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero-detail.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroService</span> <span class="p">}</span>          <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero.service</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroSearchComponent</span> <span class="p">}</span>  <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero-search.component</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">NgModule</span><span class="p">({</span>
  <span class="na">imports</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">BrowserModule</span><span class="p">,</span>
    <span class="nx">FormsModule</span><span class="p">,</span>
    <span class="nx">HttpModule</span><span class="p">,</span>
    <span class="nx">InMemoryWebApiModule</span><span class="p">.</span><span class="nx">forRoot</span><span class="p">(</span><span class="nx">InMemoryDataService</span><span class="p">),</span>
    <span class="nx">AppRoutingModule</span>
  <span class="p">],</span>
  <span class="na">declarations</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">AppComponent</span><span class="p">,</span>
    <span class="nx">DashboardComponent</span><span class="p">,</span>
    <span class="nx">HeroDetailComponent</span><span class="p">,</span>
    <span class="nx">HeroesComponent</span><span class="p">,</span>
    <span class="nx">HeroSearchComponent</span>
  <span class="p">],</span>
  <span class="na">providers</span><span class="p">:</span> <span class="p">[</span> <span class="nx">HeroService</span> <span class="p">],</span>
  <span class="na">bootstrap</span><span class="p">:</span> <span class="p">[</span> <span class="nx">AppComponent</span> <span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppModule</span> <span class="p">{</span> <span class="p">}</span>
</code></pre></div></div>

<h4 id="heroescomponentts">heroes.component.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Component</span><span class="p">,</span> <span class="nx">OnInit</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Router</span> <span class="p">}</span>            <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/router</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span>                <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroService</span> <span class="p">}</span>         <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero.service</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">my-heroes</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">templateUrl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./heroes.component.html</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">styleUrls</span><span class="p">:</span> <span class="p">[</span> <span class="dl">'</span><span class="s1">./heroes.component.css</span><span class="dl">'</span> <span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">HeroesComponent</span> <span class="kr">implements</span> <span class="nx">OnInit</span> <span class="p">{</span>
  <span class="nl">heroes</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">[];</span>
  <span class="nl">selectedHero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">;</span>
 
  <span class="kd">constructor</span><span class="p">(</span>
    <span class="kr">private</span> <span class="nx">heroService</span><span class="p">:</span> <span class="nx">HeroService</span><span class="p">,</span>
    <span class="kr">private</span> <span class="nx">router</span><span class="p">:</span> <span class="nx">Router</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
 
  <span class="nx">getHeroes</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span>
        <span class="p">.</span><span class="nx">getHeroes</span><span class="p">()</span>
        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">heroes</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span> <span class="o">=</span> <span class="nx">heroes</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="nx">add</span><span class="p">(</span><span class="na">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">.</span><span class="nx">trim</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">hero</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">hero</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
      <span class="p">});</span>
  <span class="p">}</span>
 
  <span class="k">delete</span><span class="p">(</span><span class="na">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span>
        <span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">hero</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
          <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">h</span> <span class="o">=&gt;</span> <span class="nx">h</span> <span class="o">!==</span> <span class="nx">hero</span><span class="p">);</span>
          <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span> <span class="o">===</span> <span class="nx">hero</span><span class="p">)</span> <span class="p">{</span> <span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">});</span>
  <span class="p">}</span>
 
  <span class="nx">ngOnInit</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">getHeroes</span><span class="p">();</span>
  <span class="p">}</span>
 
  <span class="nx">onSelect</span><span class="p">(</span><span class="na">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span> <span class="o">=</span> <span class="nx">hero</span><span class="p">;</span>
  <span class="p">}</span>
 
  <span class="nx">gotoDetail</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">([</span><span class="dl">'</span><span class="s1">/detail</span><span class="dl">'</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">selectedHero</span><span class="p">.</span><span class="nx">id</span><span class="p">]);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="heroescomponenthtml">heroes.component.html</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nt">&lt;h2&gt;</span>My Heroes<span class="nt">&lt;/h2&gt;</span>
<span class="nt">&lt;div&gt;</span>
  <span class="nt">&lt;label&gt;</span>Hero name:<span class="nt">&lt;/label&gt;</span> <span class="nt">&lt;input</span> <span class="na">#heroName</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">(click)=</span><span class="s">"add(heroName.value); heroName.value=''"</span><span class="nt">&gt;</span>
    Add
  <span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"heroes"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;li</span> <span class="na">*ngFor=</span><span class="s">"let hero of heroes"</span> <span class="na">(click)=</span><span class="s">"onSelect(hero)"</span>
      <span class="na">[class.selected]=</span><span class="s">"hero === selectedHero"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"badge"</span><span class="nt">&gt;</span>{{hero.id}}<span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;span&gt;</span>{{hero.name}}<span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"delete"</span>
      <span class="na">(click)=</span><span class="s">"delete(hero); $event.stopPropagation()"</span><span class="nt">&gt;</span>x<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;div</span> <span class="na">*ngIf=</span><span class="s">"selectedHero"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h2&gt;</span>
    {{selectedHero.name | uppercase}} is my hero
  <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">(click)=</span><span class="s">"gotoDetail()"</span><span class="nt">&gt;</span>View Details<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>

</code></pre></div></div>

<h4 id="heroescomponentcss">heroes.component.css</h4>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">selected</span> <span class="p">{</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#CFD8DC</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heroes</span> <span class="p">{</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">2em</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">list-style-type</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">15em</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heroes</span> <span class="nt">li</span> <span class="p">{</span>
  <span class="nl">cursor</span><span class="p">:</span> <span class="nb">pointer</span><span class="p">;</span>
  <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
  <span class="nl">left</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#EEE</span><span class="p">;</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">.5em</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">.3em</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">1.6em</span><span class="p">;</span>
  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heroes</span> <span class="nt">li</span><span class="nd">:hover</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#607D8B</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#DDD</span><span class="p">;</span>
  <span class="nl">left</span><span class="p">:</span> <span class="m">.1em</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heroes</span> <span class="nt">li</span><span class="nc">.selected</span><span class="nd">:hover</span> <span class="p">{</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#BBD8DC</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heroes</span> <span class="nc">.text</span> <span class="p">{</span>
  <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
  <span class="nl">top</span><span class="p">:</span> <span class="m">-3px</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heroes</span> <span class="nc">.badge</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span>
  <span class="nl">font-size</span><span class="p">:</span> <span class="n">small</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">0.8em</span> <span class="m">0.7em</span> <span class="m">0</span> <span class="m">0.7em</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#607D8B</span><span class="p">;</span>
  <span class="nl">line-height</span><span class="p">:</span> <span class="m">1em</span><span class="p">;</span>
  <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
  <span class="nl">left</span><span class="p">:</span> <span class="m">-1px</span><span class="p">;</span>
  <span class="nl">top</span><span class="p">:</span> <span class="m">-4px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">1.8em</span><span class="p">;</span>
  <span class="nl">margin-right</span><span class="p">:</span> <span class="m">.8em</span><span class="p">;</span>
  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span> <span class="m">0</span> <span class="m">0</span> <span class="m">4px</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">button</span> <span class="p">{</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="n">Arial</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#eee</span><span class="p">;</span>
  <span class="nl">border</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">5px</span> <span class="m">10px</span><span class="p">;</span>
  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span><span class="p">;</span>
  <span class="nl">cursor</span><span class="p">:</span> <span class="nb">pointer</span><span class="p">;</span>
  <span class="nl">cursor</span><span class="p">:</span> <span class="n">hand</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">button</span><span class="nd">:hover</span> <span class="p">{</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#cfd8dc</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">button</span><span class="nc">.delete</span> <span class="p">{</span>
  <span class="nl">float</span><span class="p">:</span><span class="nb">right</span><span class="p">;</span>
  <span class="nl">margin-top</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>
  <span class="nl">margin-right</span><span class="p">:</span> <span class="m">.8em</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="no">gray</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span><span class="no">white</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="hero-detailcomponentts">hero-detail.component.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/switchMap</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Component</span><span class="p">,</span> <span class="nx">OnInit</span> <span class="p">}</span>      <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">ActivatedRoute</span><span class="p">,</span> <span class="nx">Params</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/router</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Location</span> <span class="p">}</span>               <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/common</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span>        <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroService</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero.service</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">hero-detail</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">templateUrl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./hero-detail.component.html</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">styleUrls</span><span class="p">:</span> <span class="p">[</span> <span class="dl">'</span><span class="s1">./hero-detail.component.css</span><span class="dl">'</span> <span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">HeroDetailComponent</span> <span class="kr">implements</span> <span class="nx">OnInit</span> <span class="p">{</span>
  <span class="nl">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">;</span>
 
  <span class="kd">constructor</span><span class="p">(</span>
    <span class="kr">private</span> <span class="nx">heroService</span><span class="p">:</span> <span class="nx">HeroService</span><span class="p">,</span>
    <span class="kr">private</span> <span class="nx">route</span><span class="p">:</span> <span class="nx">ActivatedRoute</span><span class="p">,</span>
    <span class="kr">private</span> <span class="nx">location</span><span class="p">:</span> <span class="nx">Location</span>
  <span class="p">)</span> <span class="p">{}</span>
 
  <span class="nx">ngOnInit</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">route</span><span class="p">.</span><span class="nx">params</span>
      <span class="p">.</span><span class="nx">switchMap</span><span class="p">((</span><span class="na">params</span><span class="p">:</span> <span class="nx">Params</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span><span class="p">.</span><span class="nx">getHero</span><span class="p">(</span><span class="o">+</span><span class="nx">params</span><span class="p">[</span><span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">]))</span>
      <span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">hero</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">hero</span> <span class="o">=</span> <span class="nx">hero</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="nx">save</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">heroService</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hero</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">goBack</span><span class="p">());</span>
  <span class="p">}</span>
 
  <span class="nx">goBack</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">back</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="hero-detailcomponenthtml">hero-detail.component.html</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nt">&lt;div</span> <span class="na">*ngIf=</span><span class="s">"hero"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h2&gt;</span>{{hero.name}} details!<span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;label&gt;</span>id: <span class="nt">&lt;/label&gt;</span>{{hero.id}}<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;label&gt;</span>name: <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">[(ngModel)]=</span><span class="s">"hero.name"</span> <span class="na">placeholder=</span><span class="s">"name"</span> <span class="nt">/&gt;</span>
   <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">(click)=</span><span class="s">"goBack()"</span><span class="nt">&gt;</span>Back<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">(click)=</span><span class="s">"save()"</span><span class="nt">&gt;</span>Save<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>

</code></pre></div></div>

<h4 id="heroservicets">hero.service.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Injectable</span> <span class="p">}</span>    <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Headers</span><span class="p">,</span> <span class="nx">Http</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/toPromise</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Injectable</span><span class="p">()</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">HeroService</span> <span class="p">{</span>
 
  <span class="kr">private</span> <span class="nx">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">({</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span><span class="p">});</span>
  <span class="kr">private</span> <span class="nx">heroesUrl</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">api/heroes</span><span class="dl">'</span><span class="p">;</span>  <span class="c1">// URL to web api</span>
 
  <span class="kd">constructor</span><span class="p">(</span><span class="kr">private</span> <span class="nx">http</span><span class="p">:</span> <span class="nx">Http</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
 
  <span class="nx">getHeroes</span><span class="p">():</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">)</span>
               <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
               <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">[])</span>
               <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
  <span class="p">}</span>
 
 
  <span class="nx">getHero</span><span class="p">(</span><span class="na">id</span><span class="p">:</span> <span class="nx">number</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">)</span>
      <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="k">delete</span><span class="p">(</span><span class="na">id</span><span class="p">:</span> <span class="nx">number</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="k">void</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span><span class="na">headers</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">})</span>
      <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="kc">null</span><span class="p">)</span>
      <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="nx">create</span><span class="p">(</span><span class="na">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span>
      <span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">,</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span><span class="na">name</span><span class="p">:</span> <span class="nx">name</span><span class="p">}),</span> <span class="p">{</span><span class="na">headers</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">})</span>
      <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">)</span>
      <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="nx">update</span><span class="p">(</span><span class="na">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">heroesUrl</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">hero</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span>
      <span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">hero</span><span class="p">),</span> <span class="p">{</span><span class="na">headers</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">headers</span><span class="p">})</span>
      <span class="p">.</span><span class="nx">toPromise</span><span class="p">()</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="nx">hero</span><span class="p">)</span>
      <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="kr">private</span> <span class="nx">handleError</span><span class="p">(</span><span class="na">error</span><span class="p">:</span> <span class="nx">any</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">An error occurred</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span> <span class="c1">// for demo purposes only</span>
    <span class="k">return</span> <span class="nb">Promise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">message</span> <span class="o">||</span> <span class="nx">error</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="in-memory-dataservicets">in-memory-data.service.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">InMemoryDbService</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">angular-in-memory-web-api</span><span class="dl">'</span><span class="p">;</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">InMemoryDataService</span> <span class="kr">implements</span> <span class="nx">InMemoryDbService</span> <span class="p">{</span>
  <span class="nx">createDb</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">heroes</span> <span class="o">=</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Zero</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mr. Nice</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Narco</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">13</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bombasto</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Celeritas</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">15</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Magneta</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">RubberMan</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">17</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Dynama</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">18</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Dr IQ</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">19</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Magma</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Tornado</span><span class="dl">'</span> <span class="p">}</span>
    <span class="p">];</span>
    <span class="k">return</span> <span class="p">{</span><span class="nx">heroes</span><span class="p">};</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="hero-searchservicets">hero-search.service.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Injectable</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Http</span> <span class="p">}</span>       <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Observable</span> <span class="p">}</span>     <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Observable</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/map</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span>           <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Injectable</span><span class="p">()</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">HeroSearchService</span> <span class="p">{</span>
 
  <span class="kd">constructor</span><span class="p">(</span><span class="kr">private</span> <span class="nx">http</span><span class="p">:</span> <span class="nx">Http</span><span class="p">)</span> <span class="p">{}</span>
 
  <span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="nx">Observable</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">http</span>
               <span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="s2">`api/heroes/?name=</span><span class="p">${</span><span class="nx">term</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
               <span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">().</span><span class="nx">data</span> <span class="k">as</span> <span class="nx">Hero</span><span class="p">[]);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="hero-searchcomponentts">hero-search.component.ts</h4>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Component</span><span class="p">,</span> <span class="nx">OnInit</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Router</span> <span class="p">}</span>            <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/router</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">Observable</span> <span class="p">}</span>        <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Observable</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Subject</span> <span class="p">}</span>           <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/Subject</span><span class="dl">'</span><span class="p">;</span>
 
<span class="c1">// Observable class extensions</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/observable/of</span><span class="dl">'</span><span class="p">;</span>
 
<span class="c1">// Observable operators</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/catch</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/debounceTime</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">rxjs/add/operator/distinctUntilChanged</span><span class="dl">'</span><span class="p">;</span>
 
<span class="k">import</span> <span class="p">{</span> <span class="nx">HeroSearchService</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero-search.service</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Hero</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./hero</span><span class="dl">'</span><span class="p">;</span>
 
<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
  <span class="na">selector</span><span class="p">:</span> <span class="dl">'</span><span class="s1">hero-search</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">templateUrl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./hero-search.component.html</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">styleUrls</span><span class="p">:</span> <span class="p">[</span> <span class="dl">'</span><span class="s1">./hero-search.component.css</span><span class="dl">'</span> <span class="p">],</span>
  <span class="na">providers</span><span class="p">:</span> <span class="p">[</span><span class="nx">HeroSearchService</span><span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">HeroSearchComponent</span> <span class="kr">implements</span> <span class="nx">OnInit</span> <span class="p">{</span>
  <span class="nl">heroes</span><span class="p">:</span> <span class="nx">Observable</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">;</span>
  <span class="kr">private</span> <span class="nx">searchTerms</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Subject</span><span class="o">&lt;</span><span class="nx">string</span><span class="o">&gt;</span><span class="p">();</span>
 
  <span class="kd">constructor</span><span class="p">(</span>
    <span class="kr">private</span> <span class="nx">heroSearchService</span><span class="p">:</span> <span class="nx">HeroSearchService</span><span class="p">,</span>
    <span class="kr">private</span> <span class="nx">router</span><span class="p">:</span> <span class="nx">Router</span><span class="p">)</span> <span class="p">{}</span>
 
  <span class="c1">// Push a search term into the observable stream.</span>
  <span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">:</span> <span class="nx">string</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">searchTerms</span><span class="p">.</span><span class="nx">next</span><span class="p">(</span><span class="nx">term</span><span class="p">);</span>
  <span class="p">}</span>
 
  <span class="nx">ngOnInit</span><span class="p">():</span> <span class="k">void</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">heroes</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">searchTerms</span>
      <span class="p">.</span><span class="nx">debounceTime</span><span class="p">(</span><span class="mi">300</span><span class="p">)</span>        <span class="c1">// wait 300ms after each keystroke before considering the term</span>
      <span class="p">.</span><span class="nx">distinctUntilChanged</span><span class="p">()</span>   <span class="c1">// ignore if next search term is same as previous</span>
      <span class="p">.</span><span class="nx">switchMap</span><span class="p">(</span><span class="nx">term</span> <span class="o">=&gt;</span> <span class="nx">term</span>   <span class="c1">// switch to new observable each time the term changes</span>
        <span class="c1">// return the http search observable</span>
        <span class="p">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">heroSearchService</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">term</span><span class="p">)</span>
        <span class="c1">// or the observable of empty heroes if there was no search term</span>
        <span class="p">:</span> <span class="nx">Observable</span><span class="p">.</span><span class="k">of</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">([]))</span>
      <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="c1">// TODO: add real error handling</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
        <span class="k">return</span> <span class="nx">Observable</span><span class="p">.</span><span class="k">of</span><span class="o">&lt;</span><span class="nx">Hero</span><span class="p">[]</span><span class="o">&gt;</span><span class="p">([]);</span>
      <span class="p">});</span>
  <span class="p">}</span>
 
  <span class="nx">gotoDetail</span><span class="p">(</span><span class="na">hero</span><span class="p">:</span> <span class="nx">Hero</span><span class="p">):</span> <span class="k">void</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">link</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">/detail</span><span class="dl">'</span><span class="p">,</span> <span class="nx">hero</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="nx">link</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="hero-searchcomponenthtml">hero-search.component.html</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"search-component"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h4&gt;</span>Hero Search<span class="nt">&lt;/h4&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">#searchBox</span> <span class="na">id=</span><span class="s">"search-box"</span> <span class="na">(keyup)=</span><span class="s">"search(searchBox.value)"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">*ngFor=</span><span class="s">"let hero of heroes | async"</span>
         <span class="na">(click)=</span><span class="s">"gotoDetail(hero)"</span> <span class="na">class=</span><span class="s">"search-result"</span> <span class="nt">&gt;</span>
      {{hero.name}}
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>

</code></pre></div></div>

<h4 id="hero-searchcomponentcss">hero-search.component.css</h4>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.search-result</span><span class="p">{</span>
  <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">gray</span><span class="p">;</span>
  <span class="nl">border-left</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">gray</span><span class="p">;</span>
  <span class="nl">border-right</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">gray</span><span class="p">;</span>
  <span class="nl">width</span><span class="p">:</span><span class="m">195px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">16px</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">5px</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
  <span class="nl">cursor</span><span class="p">:</span> <span class="nb">pointer</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="nc">.search-result</span><span class="nd">:hover</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#eee</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#607D8B</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="nf">#search-box</span><span class="p">{</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">200px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="referensi">Referensi</h2>

<ul>
  <li>https://angular.io/tutorial/toh-pt6</li>
</ul>

:ET