I"}'<p><img src="/assets/img/setup-production-nodejs/featured-1.jpg" alt="Setup Production Applikasi NodeJS di Ubuntu Server" /></p>

<p>Pada kesempatan kali ini kita akan belajar bagaimana caranya mendeploy aplikasi berbasis NodeJS di server VPS yang kita miliki.</p>

<p>Saat ini di negara tercinta kita Indonesia belum ada hosting yang menyediakan layanannya berbasis NodeJS, sehingga kita harus mensetup secara manual aplikasi kita di VPS (Virtual Private Server).</p>

<h2 id="install-nodejs">Install NodeJS</h2>

<p>NodeJS merupakan sebuah environment berbasis javascript yang berjalan di sisi server (server side). Kita semua tau javascript merupakan bahasa pemrograman yang berjalan di sisi client (client side), tetapi menggunakan NodeJS memungkinkan javascript di eksekusi pada sisi server.</p>

<ul>
  <li>Pertama kita harus login vps kita melalui terminal, ketikan perintah berikut</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh root@31.220.111.123
</code></pre></div></div>

<p>Ganti IP 31.220.111.123 dengan IP milik anda, lalu di minta password dan masukan password anda untuk dapat login ke vps anda.</p>

<ul>
  <li>Update repository anda menggunakan perintah</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt-get update
</code></pre></div></div>

<ul>
  <li>Install NodeJS, tambahkan source package nodejs menggunakan perintah berikut pada terminal</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-sL</span> https://deb.nodesource.com/setup_4.x | <span class="nb">sudo</span> <span class="nt">-E</span> bash -
</code></pre></div></div>

<p>Setelah itu jalankan perintah :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt-get <span class="nb">install </span>nodejs
</code></pre></div></div>

<p>Setelah terinstall, untuk mengecek apakah nodejs sudah terinstall pada ubuntu server kita gunakan perintah :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>node <span class="nt">-v</span>
</code></pre></div></div>

<p><img src="/assets/img/setup-production-nodejs/node-version.jpg" alt="node-version" /></p>

<p>Jika sudah terinstall akan muncul versi nodejs yang kita gunakan.</p>

<h2 id="setup-node-app">Setup Node App</h2>

<p>Kita akan mencoba aplikasi sederhana menggunakan nodejs. Buat sebuah file dengan nama server.js dan edit menggunakan editor nano dengan mengetikan perintah berikut</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano server.js
</code></pre></div></div>

<ul>
  <li>lalu masukan source code berikut untuk membuat server dengan port 8080</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">http</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
   <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="dl">'</span><span class="s1">Contect-type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text/plain</span><span class="dl">'</span><span class="p">});</span>
   <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello World</span><span class="se">\n</span><span class="dl">'</span><span class="p">);</span>
<span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8080</span><span class="p">,</span> <span class="dl">'</span><span class="s1">31.220.111.123</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">server running at http://31.220.111.123:8080/</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="/assets/img/setup-production-nodejs/server-js.jpg" alt="server.js" /></p>

<p>Ganti IP 31.220.111.123 dengan IP Address milik anda</p>

<p>Lalu ketik <code class="highlighter-rouge">ctrl + x</code> dan <code class="highlighter-rouge">y</code> untuk menyimpan code yang sudah kita ketikan.</p>

<ul>
  <li>Jalankan server yang sudah kita buat menggunakan perintah berikut</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>node server.js
</code></pre></div></div>

<p><img src="/assets/img/setup-production-nodejs/test-node-1.jpg" alt="test-node-app" /></p>

<ul>
  <li>Untuk menjalankan aplikasi kita dapat membuka browser dan mengetikan url <code class="highlighter-rouge">http://31.220.111.123:8080/</code> atau dengan perintah</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://31.220.111.123:8080
</code></pre></div></div>

<p><img src="/assets/img/setup-production-nodejs/browser-test.jpg" alt="browser-test" /></p>

<p><img src="/assets/img/setup-production-nodejs/curl-test.jpg" alt="curl-test" /></p>

<h2 id="install--konfigurasi-pm2">Install &amp; Konfigurasi PM2</h2>

<p>PM2 merupakan Production Proccess Manager untuk nodejs. Dengan PM2 kita tidak perlu menjalankan manual server menggunakan <code class="highlighter-rouge">node server.js</code>, PM2 mampu membuatnya otomatis, juga jika terjadi perubahan pada VPS PM2 dapat merestart otomatis server kita.</p>

<ul>
  <li>Install PM2 pada Ubuntu gunakan perintah berikut</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>npm <span class="nb">install </span>pm2 <span class="nt">-g</span>
</code></pre></div></div>

<ul>
  <li>Jalankan server menggunakan PM2 dengan mengetikan perintah</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pm2 start server.js
</code></pre></div></div>

<ul>
  <li>Setelah itu check menggunakan perintah</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pm2 status
</code></pre></div></div>

<p><img src="/assets/img/setup-production-nodejs/pm2-status.jpg" alt="pm2-status" /></p>

<h2 id="install-nginx">Install Nginx</h2>

<p>Nginx menurut mbah <a href="https://id.wikipedia.org/wiki/Nginx">wikipedia</a> adalah server HTTP dan Proxy dengan kode sumber terbuka yang bisa juga berfungsi sebagai proxy IMAP/POP3.</p>

<ul>
  <li>Install Nginx pada Ubuntu Server menggunakan perintah berikut</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>nginx
</code></pre></div></div>

<ul>
  <li>Buka file default pada sites-available nginx dengan editor nano</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/nginx/sites-available/default
</code></pre></div></div>

<p>lalu masukan kode berikut ini</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>server <span class="o">{</span>
    listen 80<span class="p">;</span>

    server_name erabelajar.com<span class="p">;</span>

    location / <span class="o">{</span>
        proxy_pass http://31.220.111.123:8080<span class="p">;</span>
        proxy_http_version 1.1<span class="p">;</span>
        proxy_set_header Upgrade <span class="nv">$http_upgrade</span><span class="p">;</span>
        proxy_set_header Connection <span class="s1">'upgrade'</span><span class="p">;</span>
        proxy_set_header Host <span class="nv">$host</span><span class="p">;</span>
        proxy_cache_bypass <span class="nv">$http_upgrade</span><span class="p">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Ganti erabelajar.com dengan nama domain anda dan 31.220.111.123 dengan IP address anda.</p>

<p>Lalu ketik <code class="highlighter-rouge">ctrl + x</code> dan <code class="highlighter-rouge">y</code> untuk menyimpan code yang sudah kita ketikan.</p>

<ul>
  <li>Restart Nginx dengan mengetikan perintah :</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>service nginx restart
</code></pre></div></div>

<p>setelah itu kita akan mendapatkan notikasi bahwa konfigurasi kita sudah benar dan dapat berjalan</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">*</span> Restarting nginx nginx
</code></pre></div></div>

<p>Langkah terkahir buka browser dengan mengetikan 
<a href="http://erabelajar.com">erabelajar.com</a> atau ip address 31.220.111.123 tanpa lagi menggunakan port 8080.</p>

<h2 id="kesimpulan">Kesimpulan</h2>
<p>Pada pembahasan kita kali terdapat 5 langkah dan terbagi menjadi 2 yaitu App Server dan Web Server.</p>

<h3 id="app-server">App Server</h3>

<ul>
  <li>Install NodeJS runtime</li>
  <li>Setup Note App</li>
  <li>Install &amp; Konfigurasi PM2</li>
</ul>

<h3 id="web-server">Web Server</h3>

<ul>
  <li>Install Nginx</li>
  <li>Konfigurasi reverse proxy</li>
</ul>

<p>Ok, selamat mencoba dan semoga ilmu yang saya bagi di sini bermanfaat. see ya!</p>
:ET